{
    "contents" : "---\ntitle: \"Red wine exploration by Andre Marais\"\nauthor: \"Andre Marais\"\ndate: \"January 6, 2016\"\noutput: html_document\n---\n\n### <span style=\"color:DodgerBlue;\">Univariate Plots Section</span>\n#### <span style=\"color:DodgerBlue;\">Data overview </span>\n\n<span style=\"color:DodgerBlue;\">Number of data points</span>\n```{r, cache=T,  echo=FALSE,message=F, cache=T}\nrw <- read.csv('wineQualityReds.csv')\nnrow(rw)\n```\n\n<span style=\"color:DodgerBlue;\">Structure of data</span>\n```{r, cache=T,  echo=FALSE,message=F}\nstr(rw)\n```\nLooks like variable X might just be row numbers. It looks like quality might be rating factors instead of numeric values \n\n<span style=\"color:DodgerBlue;\">Summary of data</span>\n```{r, cache=T,  echo=FALSE,message=F}\nsummary(rw)\n```\nChecking variables X and quality\n```{r, cache=T,  echo=T,message=F}\ntable(rw$quality)\nplot(rw$X, type = 'l', col = 'dodgerblue3')\n```\n</br>\n<span style=\"color:DodgerBlue;\">Initial observations</span>\n\nVariable **X** and be safely ignored and **quality** can be converted to factors. Most wines have a **quality** rating of 5, with 75% of the wines having a rating of 6 or lower. The mean **alcohol** percentage is 10.42% and the minimum pH is 2.74, which is _very_ acidic. </br>\n\n### <span style=\"color:DodgerBlue;\">Basic Plots </span>\n\n```{r, echo = F, message=FALSE, cache = T, warning=FALSE}\nlibrary(ggplot2)\nlibrary(randomForest)\nplot.theme <- theme(\n  panel.background = element_rect(fill = \"white\", color = 'dodgerblue1'),\n  plot.background = element_rect(fill = \"white\"),\n  panel.grid.major = element_blank(),\n  panel.grid.minor = element_blank(),\n  axis.ticks.y = element_blank(),\n  panel.border = element_blank())\n  \n  ggplot(rw) + \n  geom_histogram(aes(x = fixed.acidity), \n                 col = 'dodgerblue3', \n                 fill = 'dodgerblue1') +\n  plot.theme +\n  geom_vline(xintercept = 6.75, col = 'dodgerblue3') +\n  geom_vline(xintercept = 8, col = 'dodgerblue3')\n    \n```\n</br>\nThe fixed acidity peaks around 6.75 and 8. \n</br>\n```{r, echo = F, message=FALSE}\nlibrary(ggplot2)\nggplot(rw) + \n  geom_histogram(aes(x = citric.acid), \n                 col = 'dodgerblue3', \n                 fill = 'dodgerblue1') +\n  plot.theme\n```\n</br>\nA relatively large portion (8%) of the wines have a citric acid level of 0. \n</br>\n```{r, echo = F, message=FALSE}\nggplot(rw) + \n  geom_histogram(aes(x = residual.sugar), \n                 col = 'dodgerblue3', \n                 fill = 'dodgerblue1') +\n  plot.theme\n```\n</br>\nExcluding the 2.5% top quantile from the plot:\n</br>\n```{r, echo = F, message=FALSE}\nggplot(rw) + \n  geom_histogram(aes(x = residual.sugar), \n                 col = 'dodgerblue3', \n                 fill = 'dodgerblue1') +\n  plot.theme +\n  scale_x_continuous(limits = c(0, as.numeric(quantile(rw$residual.sugar, .975))))+\n  geom_vline(xintercept = 1.5, col = 'dodgerblue3') +\n  geom_vline(xintercept = 3, col = 'dodgerblue3')\n```\n</br>\nThe residual sugar levels mostly sit around 1.5 and 3. The minimum residual sugar level is 0.9, so all red wines contain at least some sugar\n</br>\n```{r, echo = F, message=FALSE}\nggplot(rw) + \n  geom_histogram(aes(x = chlorides), \n                 col = 'dodgerblue3', \n                 fill = 'dodgerblue1') +\n  plot.theme\n```\n</br>\nThe chlorides data have a pretty long tail. Excluding the top 2.5% quantile again:\n</br>\n```{r, echo = F, message=FALSE}\nggplot(rw) + \n  geom_histogram(aes(x = chlorides), \n                 col = 'dodgerblue3', \n                 fill = 'dodgerblue1') +\n  plot.theme +\n  scale_x_continuous(limits = c(0, as.numeric(quantile(rw$chlorides, .975))))\n```\n</br>\nBarring the outliers, the chloride levels are quite symmetric around `r round(mean(rw$chlorides[rw$chlorides < as.numeric(quantile(rw$chlorides,.975))]),3) `  (the mean for the data in the graph above)\n</br>\n\n```{r, echo = F, message=FALSE}\nggplot(rw) + \n  geom_histogram(aes(x = free.sulfur.dioxide), \n                 col = 'dodgerblue3', \n                 fill = 'dodgerblue1') +\n  plot.theme\n```\n</br>\nThere is a peak of free sulfur dioxide levels between 5 and 6. Sulfar dioxide is in general a bad thing in wine (affects the taste and some people are allergic to it). The peak of sulfur dioxide levels might be due to compliance by most wineries with food laws. \n</br>\n\n```{r, echo = F, message=FALSE}\nggplot(rw) + \n  geom_histogram(aes(x = total.sulfur.dioxide), \n                 col = 'dodgerblue3', \n                 fill = 'dodgerblue1') +\n  plot.theme\n```\n</br>\nTotal sulfar dioxide might not be that much more informative than the previous metric, since it's dependent on the amount of wine in the bottle (the taste might be more related to the previous metric as opposed to total sulfar dioxide levels)\n</br>\n```{r, echo = F, message=FALSE, warning=F}\n  ggplot(rw) + \n    geom_histogram(aes(x = density), \n                   col = 'dodgerblue3', \n                   fill = 'dodgerblue1',\n                   position = 'dodge') +\n    plot.theme\n```\n```{r, echo = F, message=FALSE}\nggplot(rw) + \n  geom_histogram(aes(x = pH), \n                 col = 'dodgerblue3', \n                 fill = 'dodgerblue1') +\n  plot.theme\n```\n</br>\nThe density and pH histograms look like they might come from a normal distribution. Surprisingly, the Shapiro test for normality show that they don't. The p-value for the Shapiro test for both of these metrics are far less than 0.05. The null hypothesis for the Spapiro states that the values come from a normal distribution, while the alternative is that the values do _not_ come from a normal distribution. With a p-value of less than 0.05 we can reject that null hypothesis in favor of the alternative. The p-value for density: `r formatC(shapiro.test(rw$density)$p.value,digits=10,format=\"f\")` and for pH: `r formatC(shapiro.test(rw$pH)$p.value,digits=10,format=\"f\")`\n</br>\n\n```{r, echo = F, message=FALSE}\nggplot(rw) + \n  geom_histogram(aes(x = sulphates), \n                 col = 'dodgerblue3', \n                 fill = 'dodgerblue1') +\n  plot.theme\n```\n</br>\nSulphates also has a very long tail. Excluding the top 2.5% quantile again:\n</br>\n```{r, echo = F, message=FALSE}\nggplot(rw) + \n  geom_histogram(aes(x = sulphates), \n                 col = 'dodgerblue3', \n                 fill = 'dodgerblue1') +\n  plot.theme+\n  scale_x_continuous(limits = c(0, as.numeric(quantile(rw$sulphates, .975))))\n```\n```{r, echo = F, message=FALSE}\nggplot(rw) + \n  geom_histogram(aes(x = alcohol), \n                 col = 'dodgerblue3', \n                 fill = 'dodgerblue1') +\n  plot.theme\n```\n</br>\nIt looks like there is always at least some alcohol and sulphites in  wine. The minimum quantity of alcohol found is `r min(rw$alcohol)` and for sulphates `r min(rw$sulphates)` It seems like sulphatis is the go-to preservative for wine because of its antioxidant and antibacterial properties. Alcohol is a natural by-product of fermentation, so it shouldn't be a surprise. There is also a peak of alcohol content of \n</br>\n```{r, echo = F, message=FALSE}\nggplot(rw) + \n  geom_histogram(aes(x = as.factor(quality)), \n                 col = 'dodgerblue3', \n                 fill = 'dodgerblue1') +\n    xlab('quality')+\n  plot.theme\n```\n</br>\nAs stated previously, it might be more meaningful to treat the quality values as factors. Without knowing what the possible range is like for the ratings (ie does it go from 1 to 10, or only from 3 to 6), it's difficult to say what these scores actually mean. I would assume a higher score is better. More than 96% of the wine has a rating of 5 or better. It will be interesting to see what makes the wines with a rating of 3 or 4 so bad. \n</br>\n\n### <span style=\"color:DodgerBlue;\">Univariate analysis </span>\n#### <span style=\"color:DodgerBlue;\">Data overview </span>\n</br>\nThe red wine data set has 1,599 data points, with 13 features (of which we can ignore one, namely **X**). All but one feature are numeric values - **quality** was converted to factors. Only a few features are easy to judge in terms of scale (ie is lower better?). \n</br>\n</br>\nA few things I found interesting were the peak values for some features, which _might_ be due to legislation in some countries. Feature like **free sulfar dioxide**, **pH** and **alcohol** have definate peaks. While it's not possible to determine whether it really is due to legislation or just coincidental, it will be interesting to see if it has an effect on the wine itself. I created three new dummy variables to indicate whether the wine is above (1) or beneath (0) the peak value for **free sulfar dioxide**, **pH** and **alcohol** individually. The peak values for these values are `r names(table(rw$free.sulfur.dioxide))[order(table(rw$free.sulfur.dioxide), decreasing = T)[1]]`, `r names(table(rw$pH))[order(table(rw$pH), decreasing = T)[1]]` and `r names(table(rw$alcohol))[order(table(rw$alcohol), decreasing = T)[1]]` respectively.\n</br>\n</br>\nI'm curious to see how the sulphate and alcohol levels affect the quality of the wine. Citric accid and sugar content might boil down to personal preference, but I'll investigat the relation between those variables and the quality of the wine just the same. \n</br>\n</br>\n\n\n### <span style=\"color:DodgerBlue;\">Bivariate Plots Section</span>\n</br>\n```{r, echo = F, message=FALSE, warning=FALSE, }\nlibrary(corrplot)\nlibrary(magrittr)\n\n### function to create dummy variables \ndv.function <- function(x) {\n  sapply(x, function(y) \n    if (y > (x %>% table %>% names %>% as.numeric)\n        [(x %>% table %>% order(decreasing = T))[1]]) 1 else 0)\n}\n\nrw$free.sulfur.dioxide.dv <- dv.function(rw$free.sulfur.dioxide)\nrw$ph.dv <- dv.function(rw$pH)\nrw$alcohol.dv <- dv.function(rw$alcohol)\n\ncorrplot(cor(rw[ ,2:13]), type = 'lower')\n```\n</br>\nA larger more opaque circle indicates a more significant correlation. Blue indicates a positive correlation while red indicates a negative correlation. From the graph above we can see it's worthwhile to look at the link between **alcohol** levels vs **quality** and **volatile acidity** vs quality. Other variables we can look at include **density** vs **alcohol** and **density** vs **fixed acidity**. It's interesting to note that the sulphate levels don't correlate much with non-sulphate features. \n</br>\n\n```{r, echo = F, message=FALSE}\nggplot(rw) + geom_boxplot(aes(x = as.factor(quality), \n                              y = alcohol), \n                          outlier.colour ='firebrick1',\n                          col = 'dodgerblue3',\n                          fill = 'dodgerblue1') + \n  plot.theme + xlab('Quality') + \n  ggtitle('Quality vs Alcohol')\n```\n</br>\nNote the amount of outliers (red) for wine which has a quality rating of 5. This will need some further investigation.\n</br>\n```{r, echo = F, message=FALSE}\nggplot(rw) + geom_boxplot(aes(x = as.factor(quality),y = volatile.acidity), \n                          outlier.colour ='firebrick1',\n                          col = 'dodgerblue3', \n                          fill = 'dodgerblue1') + \n  plot.theme + xlab('Quality') + \n  ggtitle('Quality vs Volatile acidity')\n```\n</br>\nOnce again there seems to be quite a few outliers with higher quality wines. \n</br>\n```{r, echo = F, message=FALSE}\n\nggplot(rw) + \n  geom_point(aes(x = density, y = alcohol),\n             col = 'dodgerblue3') + \n  plot.theme + \n  xlab('Quality') + \n  ggtitle('Density vs alcohol') +\n  geom_smooth(aes(x = density, y = alcohol), \n              method = \"lm\", \n              se = F, \n              col = 'firebrick1', \n              size = 1) \n```\n</br>\nThe straight line is regression line, the descending slope shows the negative correlation. \n</br>\n```{r, echo = F, message=FALSE}\nggplot(rw) + \n  geom_point(aes(x = density, y = fixed.acidity),\n             col = 'dodgerblue3') + \n  plot.theme + \n  xlab('Quality') + \n  ggtitle('Density vs fixed acidity') +\n  geom_smooth(aes(x = density, y = fixed.acidity), \n              method = \"lm\", \n              se = F, \n              col = 'firebrick1', \n              size = 1) \n```\n</br>\nIn this case the ascending regression line show the positive correlation between the density and fixed acidity of red wine. \n</br>\n```{r, echo = F, message=FALSE}\nggplot(rw) + \n  geom_point(aes(x = pH, y = fixed.acidity),\n             col = 'dodgerblue3') + \n  plot.theme + \n  xlab('pH') + \n  ggtitle('pH vs fixed acidity') +\n  geom_smooth(aes(x = pH, y = fixed.acidity), \n              method = \"lm\", \n              se = F, \n              col = 'firebrick1', \n              size = 1) \n```\n```{r, echo = F, message=FALSE, warning=F}\nggplot(rw) + \n  geom_point(aes(x = pH, y = citric.acid),\n             col = 'dodgerblue3') + \n  plot.theme + \n  xlab('pH') + \n  ggtitle('pH vs citric acid') +\n  geom_smooth(aes(x = pH, y = citric.acid), \n              method = \"lm\", \n              se = F, \n              col = 'firebrick1', \n              size = 1) +\n  scale_y_continuous(limits = c(0, max(rw$citric.acid)))\n```\n</br>\nIt shouldn't be a surprise that a lower pH level relates to a higher acidity level. But it's worth checking out at least.\n</br>\n</br>\nI want to focus on quality. What makes a good wine good?\n```{r, echo = F, message=FALSE, warning=F}\nggplot(rw) + \n  geom_point(aes(x = alcohol, y = volatile.acidity), col = 'dodgerblue1') + \n  facet_grid(.~quality) + plot.theme\n```\n</br>\nIt looks the alcohol **variance** is much lower with lower quality wines. \n</br>\n```{r, echo = F, message=FALSE, warning=F}\ntapply(rw$alcohol, rw$quality, summary)\naggregate(data = rw, alcohol ~ quality, FUN = var)\naggregate(data = rw, alcohol ~ quality, FUN = var) %>% \n  ggplot() + \n  geom_line(aes(x = quality, y = alcohol), col = 'dodgerblue3')+\n  plot.theme +\n  geom_smooth(aes(x = quality, y = alcohol), \n              se = F, \n              method = 'lm', \n              col = 'firebrick1', \n              size = 1)\n```\n</br>\nThe variance in fact higer with the better quality wines. \n</br>\n```{r, echo = F, message=FALSE, warning=F}\ntapply(rw$volatile.acidity, rw$quality, summary)\naggregate(data = rw, volatile.acidity ~ quality, FUN = var)\naggregate(data = rw, volatile.acidity ~ quality, FUN = var) %>% \n  ggplot() + \n  geom_line(aes(x = quality, y = volatile.acidity), col = 'dodgerblue3')+\n  plot.theme +\n  geom_smooth(aes(x = quality, y = volatile.acidity), \n              se = F, \n              method = 'lm', \n              col = 'firebrick1', \n              size = 1)\n```\n</br>\n```{r, echo = F, message=FALSE, warning=F}\nggplot(rw) + \n  geom_point(aes(x = density, \n                 y = total.sulfur.dioxide, \n                 col = as.factor(alcohol.dv))) + \n  scale_color_manual(values=c(\"dodgerblue1\", \"firebrick1\")) + \n  facet_grid(alcohol.dv ~.) + \n  plot.theme + \n  theme(legend.position=\"none\")\n```\n</br>\nThere is a much higher variance in the density with higher percentage alcohol wine\n</br>\n```{r, echo = F, message=FALSE, warning=F}\naggregate(data = rw, density ~ alcohol.dv, FUN = var)\n```\n</br>\nComparing the density and total sulfar dioxide between the wine above and below the mode, you can see the variance of the density is much higher with wines with an alcohol above the mode. \n\n</br>\n\n\n### <span style=\"color:DodgerBlue;\">Bivariate analysis Section</span>\n</br> \nThe quality of the wine increases along with the alcohol content. There are quite a few outliers with wines having a quality rating of 5. _If_ 5 is the average rating for wine, it wouldn't be too naive to assume that a rating of 5 is the go-to rating for whines where the judge can't place it with confidence. This might be the reason why thre is a higher variance with the wine with a rating of 5. Also, higher quality wine have smaller volatile acidity levels. Another thing I found interesting is that the variance of the alcohol content increases with the quality of the wine, while the variance of the volatile acidity decreses with better quality wine. This might be due to the wine makers being slightly indifferent about the alcohol content of their wines, if it's a good season. \n\nUsing a randomForest model, you can see what the important variables are to help predict quality. Using 500 trees, with replacement, the top 5 features are as follows:\n```{r, echo = F, message=FALSE, warning=F, cache=T}\nrf.Imp <-randomForest(as.factor(quality) ~ . , data = rw[ ,2:13])\n\ngsub('\\\\.', ' ',row.names(rf.Imp$importance))[order(rf.Imp$importance, decreasing = T)][1:5]\n```\n</br>\nThe random forest itself: \n```{r, echo = F, message=FALSE, warning=F, cache=T}\nrf.Imp\n```\n\n\n\n\n",
    "created" : 1452089108443.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2440912421",
    "id" : "D10C3C53",
    "lastKnownWriteTime" : 1452555475,
    "path" : "C:/Github/DataAnalystNanodegree/P4/Project/RWmd.Rmd",
    "project_path" : "RWmd.Rmd",
    "properties" : {
        "tempName" : "Untitled2"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_markdown"
}