{
    "contents" : "---\ntitle: \"Red wine exploration by Andre Marais\"\nauthor: \"Andre Marais\"\ndate: \"January 14, 2016\"\noutput: html_document\n---\n\n### <span style=\"color:DodgerBlue;\">Univariate Plots Section</span>\n#### <span style=\"color:DodgerBlue;\">Data overview </span>\n\n<span style=\"color:DodgerBlue;\">Number of data points</span>\n```{r nrow, cache=T,  echo=FALSE,message=F, cache=T}\nrw <- read.csv('wineQualityReds.csv')\nnrow(rw)\n```\n\n<span style=\"color:DodgerBlue;\">Structure of data</span>\n```{r str, cache=T,  echo=FALSE,message=F}\nstr(rw)\n```\nLooks like variable X might just be row numbers. It looks like quality might be rating factors instead of numeric values \n\n<span style=\"color:DodgerBlue;\">Summary of data</span>\n```{r summary, cache=T,  echo=FALSE,message=F}\nsummary(rw)\n```\nChecking variables X and quality\n```{r, cache=T,  echo=T,message=F}\ntable(rw$quality)\nplot(rw$X, type = 'l', col = 'dodgerblue3')\n```\n</br>\n<span style=\"color:DodgerBlue;\">Initial observations</span>\n\nVariable X and be safely ignored and quality can be converted to factors. Most wines have a quality rating of 5, with 75% of the wines having a rating of 6 or lower. The mean alcohol percentage is 10.42% and the minimum pH is 2.74, which is _very_ acidic. </br>\n\n### <span style=\"color:DodgerBlue;\">Basic Plots </span>\n\n```{r, echo = F, message=FALSE, cache = T, warning=FALSE}\nlibrary(ggplot2)\nlibrary(randomForest)\n# setting the theme for all the future plots\nplot.theme <- theme(\n  panel.background = element_rect(fill = \"white\", color = 'dodgerblue1'),\n  plot.background = element_rect(fill = \"white\"),\n  panel.grid.major = element_blank(),\n  panel.grid.minor = element_blank(),\n  axis.ticks.y = element_blank(),\n  panel.border = element_blank())\n\nggplot(rw) + \n  geom_histogram(aes(x = fixed.acidity), \n                 col = 'dodgerblue3', \n                 fill = 'dodgerblue1') +\n  plot.theme +\n  geom_vline(xintercept = 6.75, col = 'dodgerblue3') +\n  geom_vline(xintercept = 8, col = 'dodgerblue3')\n\n```\n</br>\nThe fixed acidity peaks around 6.75 and 8. \n</br>\n```{r, echo = F, message=FALSE, warning = F}\nlibrary(ggplot2)\nggplot(rw) + \n  geom_histogram(aes(x = citric.acid), \n                 col = 'dodgerblue3', \n                 fill = 'dodgerblue1') +\n  plot.theme\n```\n</br>\nA relatively large portion (8%) of the wines have a citric acid level of 0. \n</br>\n```{r, echo = F, message=FALSE}\nggplot(rw) + \n  geom_histogram(aes(x = residual.sugar), \n                 col = 'dodgerblue3', \n                 fill = 'dodgerblue1') +\n  plot.theme\n```\n</br>\nExcluding the 2.5% top quantile from the plot:\n</br>\n```{r, echo = F, message=FALSE}\nggplot(rw) + \n  geom_histogram(aes(x = residual.sugar), \n                 col = 'dodgerblue3', \n                 fill = 'dodgerblue1') +\n  plot.theme +\n  scale_x_continuous(limits = c(0, \n                                as.numeric(quantile(rw$residual.sugar, .975))))+\n  geom_vline(xintercept = 1.5, col = 'dodgerblue3') +\n  geom_vline(xintercept = 3, col = 'dodgerblue3')\n```\n</br>\nThe residual sugar levels mostly sit around 1.5 and 3. The minimum residual sugar level is 0.9, so all red wines contain at least some sugar\n</br>\n```{r 1, echo = F, message=FALSE}\nggplot(rw) + \n  geom_histogram(aes(x = chlorides), \n                 col = 'dodgerblue3', \n                 fill = 'dodgerblue1') +\n  plot.theme\n```\n</br>\nThe chlorides data have a pretty long tail. Excluding the top 2.5% quantile again:\n</br>\n```{r, echo = F, message=FALSE}\nggplot(rw) + \n  geom_histogram(aes(x = chlorides), \n                 col = 'dodgerblue3', \n                 fill = 'dodgerblue1') +\n  plot.theme +\n  scale_x_continuous(limits = c(0, as.numeric(quantile(rw$chlorides, .975))))\n```\n</br>\nBarring the outliers, the chloride levels are quite symmetric around `r round(mean(rw$chlorides[rw$chlorides < as.numeric(quantile(rw$chlorides,.975))]),3) `  (the mean for the data in the graph above)\n</br>\n\n```{r, echo = F, message=FALSE}\nggplot(rw) + \n  geom_histogram(aes(x = free.sulfur.dioxide), \n                 col = 'dodgerblue3', \n                 fill = 'dodgerblue1') +\n  plot.theme\n```\n</br>\nThere is a peak of free sulfur dioxide levels between 5 and 6. Sulphur dioxide is in general a bad thing in wine (affects the taste and some people are allergic to it). The peak of sulfur dioxide levels might be due to compliance by most wineries with food laws. \n</br>\n\n```{r, echo = F, message=FALSE}\nggplot(rw) + \n  geom_histogram(aes(x = total.sulfur.dioxide), \n                 col = 'dodgerblue3', \n                 fill = 'dodgerblue1') +\n  plot.theme\n```\n</br>\nTotal sulfur dioxide might not be that much more informative than the previous metric, since it's dependent on the amount of wine in the bottle (the taste might be more related to the previous metric as opposed to total sulfur dioxide levels)\n</br>\n```{r, echo = F, message=FALSE, warning=F}\nggplot(rw) + \n  geom_histogram(aes(x = density), \n                 col = 'dodgerblue3', \n                 fill = 'dodgerblue1',\n                 position = 'dodge') +\n  plot.theme\n```\n```{r, echo = F, message=FALSE}\nggplot(rw) + \n  geom_histogram(aes(x = pH), \n                 col = 'dodgerblue3', \n                 fill = 'dodgerblue1') +\n  plot.theme\n```\n</br>\nThe density and pH histograms look like they might come from separate normal distributions. Surprisingly, the Shapiro test for normality show that they don't. The p-value for the Shapiro test for both of these metrics are far less than 0.05. The null hypothesis for the Shapiro states that the values come from a normal distribution, while the alternative is that the values do _not_ come from a normal distribution. With a p-value of less than 0.05 we can reject that null hypothesis in favor of the alternative. The p-value for density: `r formatC(shapiro.test(rw$density)$p.value,digits=10,format=\"f\")` and for pH: `r formatC(shapiro.test(rw$pH)$p.value,digits=10,format=\"f\")`\n</br>\n\n```{r, echo = F, message=FALSE}\nggplot(rw) + \n  geom_histogram(aes(x = sulphates), \n                 col = 'dodgerblue3', \n                 fill = 'dodgerblue1') +\n  plot.theme\n```\n</br>\nSulphates also has a very long tail. Excluding the top 2.5% quantile again:\n</br>\n```{r, echo = F, message=FALSE}\nggplot(rw) + \n  geom_histogram(aes(x = sulphates), \n                 col = 'dodgerblue3', \n                 fill = 'dodgerblue1') +\n  plot.theme+\n  scale_x_continuous(limits = c(0, as.numeric(quantile(rw$sulphates, .975))))\n```\n```{r, echo = F, message=FALSE}\nggplot(rw) + \n  geom_histogram(aes(x = alcohol), \n                 col = 'dodgerblue3', \n                 fill = 'dodgerblue1') +\n  plot.theme\n```\n</br>\nIt looks like there is always at least _some_ alcohol and sulphates in  wine. The minimum quantity of alcohol found is `r min(rw$alcohol)` and for sulphates `r min(rw$sulphates)`. It seems like sulphates is the go-to preservative for wine because of its antioxidant and antibacterial properties. Alcohol is a natural by-product of fermentation, so it shouldn't be a surprise. The mode alcohol level is `r names(table(rw$alcohol))[order(table(rw$alcohol), decreasing = T)[1]]` \n</br>\n```{r, echo = F, message=FALSE}\nggplot(rw) + \n  geom_histogram(aes(x = as.factor(quality)), \n                 col = 'dodgerblue3', \n                 fill = 'dodgerblue1') +\n  xlab('quality')+\n  plot.theme\n```\n</br>\nAs stated previously, it might be more meaningful to treat the quality values as factors. Without knowing what the possible range is like for the ratings (ie does it go from 1 to 10, or only from 3 to 6), it's difficult to say what these scores actually mean. I would assume a higher score is better. More than 96% of the wine has a rating of 5 or better.\n</br>\n\n### <span style=\"color:DodgerBlue;\">Univariate analysis </span>\n#### <span style=\"color:DodgerBlue;\">Data overview </span>\n</br>\nThe red wine data set has 1,599 data points, with 13 features (of which we can ignore one, namely X). All but one feature are numeric values - quality was converted to factors. Only a few features are easy to judge in terms of scale (ie is lower better?). \n</br>\n</br>\nA few things I found interesting were the peak values for some features, which _might_ be due to legislation in some countries. Feature like free sulfur dioxide, pH and alcohol have definite peaks. While it's not possible to determine whether it really is due to legislation or just coincidental, it will be interesting to see if it has an effect on the wine itself. The mode for sulphar, pH and acohol are `r names(table(rw$free.sulfur.dioxide))[order(table(rw$free.sulfur.dioxide), decreasing = T)[1]]`, `r names(table(rw$pH))[order(table(rw$pH), decreasing = T)[1]]` and `r names(table(rw$alcohol))[order(table(rw$alcohol), decreasing = T)[1]]` respectively.\n</br>\nI'm curious to see how the sulphate and alcohol levels affect the quality of the wine. Citric acid and sugar content might boil down to personal preference, but I'll investigate the relation between those variables and the quality of the wine just the same. \n</br>\n\n\n### <span style=\"color:DodgerBlue;\">Bivariate Plots</span>\n</br>\n```{r, echo = F, message=FALSE, warning=FALSE, }\nlibrary(corrplot)\nlibrary(magrittr)\n\n### function to create dummy variables \n# dv.function <- function(x) {\n#   sapply(x, function(y) \n#     if (y > (x %>% table %>% names %>% as.numeric)\n#         [(x %>% table %>% order(decreasing = T))[1]]) 1 else 0)\n# }\n# \n# rw$free.sulfur.dioxide.dv <- dv.function(rw$free.sulfur.dioxide)\n# rw$ph.dv <- dv.function(rw$pH)\n# rw$alcohol.dv <- dv.function(rw$alcohol)\n\n# these variables ended up to be useless for the most part. Instead of adding them and explaining them away again, I opted just to leave them out \n\ncorrplot(cor(rw[ ,2:13]), type = 'lower')\n```\n</br>\nA larger more opaque circle indicates a more significant correlation. Blue indicates a positive correlation while red indicates a negative correlation. From the graph above we can see it's worthwhile to look at the link between quality and alcohol, volatile acidity and sulphates levels. Other variables we can look at include density vs alcohol and density vs fixed acidity. It's interesting to see there isn't a strong correlation between the sulphur features and quality, which is strange. Will investigate this further.\n</br>\n\n```{r quality vs alcohol, echo = F, message=FALSE}\nggplot(rw) + geom_boxplot(aes(x = as.factor(quality), \n                              y = alcohol), \n                          outlier.colour ='firebrick1',\n                          col = 'dodgerblue3',\n                          fill = 'dodgerblue1') + \n  plot.theme + \n  ggtitle('Quality vs alcohol')\n```\n</br>\nNote the amount of outliers (red dots) for wine which has a quality rating of 5. \n</br>\n```{r quality vs sulphates, echo = F, message=FALSE}\nggplot(rw) + geom_boxplot(aes(x = as.factor(quality), \n                              y = sulphates), \n                          outlier.colour ='firebrick1',\n                          col = 'dodgerblue3',\n                          fill = 'dodgerblue1') + \n  plot.theme + \n  ggtitle('Quality vs sulphates')\n```\n</br>\nOnce again a lot of outliers with wine which has a quality rating of 5.\n</br>\n```{r quality vs volatilie acidity, echo = F, message=FALSE}\nggplot(rw) + geom_boxplot(aes(x = as.factor(quality),\n                              y = volatile.acidity), \n                          outlier.colour ='firebrick1',\n                          col = 'dodgerblue3', \n                          fill = 'dodgerblue1') + \n  plot.theme + \n  ggtitle('Quality vs volatile acidity')\n```\n</br>\nAnd again, there seems to be quite a few outliers with higher quality wines. \n</br>\nBecause there is a strong correlation between alcohol and density, I'm going to check out the link between quality and density as well\n</br>\n```{r quality vs density, echo = F, message=FALSE}\nggplot(rw) + geom_boxplot(aes(x = as.factor(quality),\n                              y = density), \n                          outlier.colour ='firebrick1',\n                          col = 'dodgerblue3', \n                          fill = 'dodgerblue1') + \n  plot.theme + \n  ggtitle('Quality vs density')\n```\n</br>\nLooks like there might be a link between quality and density \n</br>\n```{r quality vs chlorides, echo = F, message=FALSE}\nggplot(rw) + geom_boxplot(aes(x = as.factor(quality),\n                              y = chlorides), \n                          outlier.colour ='firebrick1',\n                          col = 'dodgerblue3', \n                          fill = 'dodgerblue1') + \n  plot.theme + \n  ggtitle('Quality vs chlorides')\n```\n</br>\nDoesn't look promising.\n</br>\n```{r quality vs citric.acid, echo = F, message=FALSE}\nggplot(rw) + geom_boxplot(aes(x = as.factor(quality),\n                              y = citric.acid), \n                          outlier.colour ='firebrick1',\n                          col = 'dodgerblue3', \n                          fill = 'dodgerblue1') + \n  plot.theme + \n  ggtitle('Quality vs citric acid')\n```\n</br>\nLooks like there is a good link between quality and citric acid levels.\n</br>\n```{r Sulphates vs alcohol, echo = F, message=FALSE}\nggplot(rw) + \n  geom_point(aes(x = sulphates, \n                 y = alcohol),\n             col = 'dodgerblue3') + \n  plot.theme + \n  ggtitle('Sulphates vs alcohol') +\n  geom_smooth(aes(x = sulphates, \n                  y = alcohol), \n              method = \"lm\", \n              se = F, \n              col = 'firebrick1', \n              size = 1) \n```\n</br>\nThe red line is a fitted linear model. Such a low correlation level `r cor(rw$sulphates, rw$alcohol)` means the features aren't redundant. For modelling purposes it means we can use both features.\n</br>\n```{r Sulphates vs volatile acidity, echo = F, message=FALSE}\nggplot(rw) + \n  geom_point(aes(x = sulphates, \n                 y = volatile.acidity),\n             col = 'dodgerblue3') + \n  plot.theme + \n  ggtitle('Sulphates vs volatile acidity') +\n  geom_smooth(aes(x = sulphates, \n                  y = volatile.acidity), \n              method = \"lm\", \n              se = F, \n              col = 'firebrick1', \n              size = 1) \n```\n</br>\nNot a weak correlation `r cor(rw$sulphates, rw$volatile.acidity)`, will have to see if this contributes to the accuracy of the model. \n</br>\n```{r Alcohol vs volatile acidity, echo = F, message=FALSE}\nggplot(rw) + \n  geom_point(aes(x = alcohol, \n                 y = volatile.acidity),\n             col = 'dodgerblue3') + \n  plot.theme + \n  ggtitle('Alcohol vs volatile acidity') +\n  geom_smooth(aes(x = alcohol, \n                  y = volatile.acidity), \n              method = \"lm\", \n              se = F, \n              col = 'firebrick1', \n              size = 1) \n```\n</br>\nA weak correlation `r cor(rw$alcohol, rw$volatile.acidity)`, might be valuable the model. \n</br>\n```{r Density vs alcohol, echo = F, message=FALSE, warning=F}\nggplot(rw) + \n  geom_point(aes(x = density, \n                 y = alcohol),\n             col = 'dodgerblue3') + \n  plot.theme + \n  ggtitle('Density vs alcohol') +\n  geom_smooth(aes(x = density, \n                  y = alcohol), \n              method = \"lm\", \n              se = F, \n              col = 'firebrick1', \n              size = 1)\n```\n</br>\nA stronger negative correlation `r cor(rw$alcohol, rw$density)`, will have to see if this adds value to the model. \n</br>\n```{r Sulphates vs sulphates, echo = F, message=FALSE, warning=F}\nggplot(rw) + \n  geom_point(aes(x = sulphates, \n                 y = chlorides),\n             col = 'dodgerblue3') + \n  plot.theme + \n  ggtitle('Sulphates vs sulphates') +\n  geom_smooth(aes(x = sulphates, \n                  y = chlorides), \n              method = \"lm\", \n              se = F, \n              col = 'firebrick1', \n              size = 1)\n```\n</br>\nA stronger correlation `r cor(rw$sulphates, rw$chlorides)`, but not high enough to consider ignoring this feature.\n</br>\n\n```{r volatile acidity vs citric acid, echo = F, message=FALSE, warning=F}\nggplot(rw) + \n  geom_point(aes(x = volatile.acidity, \n                 y = citric.acid),\n             col = 'dodgerblue3') + \n  plot.theme + \n  ggtitle('volatile acidity vs citric acid') +\n  geom_smooth(aes(x = volatile.acidity, \n                  y = citric.acid), \n              method = \"lm\", \n              se = F, \n              col = 'firebrick1', \n              size = 1)+\n  scale_y_continuous(limits = c(0, max(rw$citric.acid)*1.1))\n```\n</br>\nA relatively strong negative correlation `r cor(rw$volatile.acidity, rw$citric.acid)`, will have to see if this is worthwhile.\n</br>\n\n\n### <span style=\"color:DodgerBlue;\">Bivariate analysis</span>\n</br> \nThe quality of the wine increases along with higher alcohol content and lower volatile acidity levels. There are quite a few alcohol outliers with wines having a quality rating of 5. _If_ 5 is the average rating for wine, it wouldn't be too naive to assume that a rating of 5 is the go-to rating for wines where the judge can't place it with confidence. This might be the reason why there is a higher variance with the wine with a rating of 5. \n</br>\n</br>\nI want to see if I can build a model which can predict the quality of a wine, based on the given features. The features which seem most useful for now include alcohol, sulphates and volatile acidity. Density, chloride and citric acid might also be useful, but they are quite correlated with alcohol, sulphates and volatile acidity respectively. \n</br>\n\n\n### <span style=\"color:DodgerBlue;\">Multivariate plots</span>\n\n</br>\n```{r, echo = F, message=FALSE, warning=F}\nggplot(rw) + \n  geom_point(aes(x = alcohol, \n                 y = volatile.acidity), \n             col = 'dodgerblue1') + \n  facet_grid(.~quality) + \n  plot.theme\n```\n</br>\nIt looks the alcohol variance is much higher with higher quality wines. \n</br>\n```{r, echo = F, message=FALSE, warning=F}\naggregate(data = rw, alcohol ~ quality, FUN = var)\n```\n</br>\nThe variance in fact higher with the better quality wines. \n</br>\n```{r, echo = F, message=FALSE, warning=F}\n# I use magrittr to pass/ pipe results forward (ergo the %>% format)\naggregate(data = rw, alcohol ~ quality, FUN = var) %>% \n  ggplot() + \n  geom_line(aes(x = quality, \n                y = alcohol), \n            col = 'dodgerblue3',\n            alpha = .25)+\n  geom_point(aes(x = quality, \n                 y = alcohol), \n             col = 'dodgerblue3')+\n  plot.theme +\n  geom_smooth(aes(x = quality, \n                  y = alcohol), \n              se = F, \n              method = 'lm', \n              col = 'firebrick1', \n              size = 1)\n```\n```{r, echo = F, message=FALSE, warning=F}\naggregate(data = rw, volatile.acidity ~ quality, FUN = var)\n```\n```{r, echo = F, message=FALSE, warning=F}\naggregate(data = rw, volatile.acidity ~ quality, FUN = var) %>% \n  ggplot() + \n  geom_line(aes(x = quality, \n                y = volatile.acidity), \n            col = 'dodgerblue3',\n            alpha = .25)+\n  geom_point(aes(x = quality, \n                 y = volatile.acidity), \n             col = 'dodgerblue3')+\n  plot.theme +\n  geom_smooth(aes(x = quality, \n                  y = volatile.acidity), \n              se = F, \n              method = 'lm', \n              col = 'firebrick1', \n              size = 1)\n```\n</br>\nVolatile acidity's variance decrease with higher quality wines. \n</br>\n```{r sulphates vs alcohol vs quality, echo = F, message=FALSE, warning=F}\nggplot(rw) + \n  geom_point(aes(x = sulphates, \n                 y = alcohol), \n             col = 'dodgerblue1') + \n  facet_grid(.~quality) + \n  geom_smooth(aes(x = sulphates, \n                  y = alcohol), \n              se = F, \n              method = 'lm', \n              col = 'firebrick1', \n              size = 1)+\n  plot.theme\n```\n</br>\nThe correlation between alcohol and sulphates differ quite significantly between the different qualities\n</br>\n\n\n\n```{r, echo = F, message=FALSE, warning=F, cache = T}\nqualities <- unique(rw$quality)[order(unique(rw$quality))]\nfor (i in qualities) {\n  print(paste('Quality:', i, \n              '|', \n              'correlation: ', \n              round(cor(rw[rw$quality == i, 'sulphates'],\n                        rw[rw$quality == i, 'alcohol']\n              ),6), sep = ''))\n}\n\n```\n</br>\nSignificant correlation only appears at qualities with small samples.\n</br>\n```{r sulphates vs volatile.acidity vs quality, echo = F, message=FALSE, warning=F}\nggplot(rw) + \n  geom_point(aes(x = sulphates, \n                 y = volatile.acidity), \n             col = 'dodgerblue1') + \n  facet_grid(.~quality) + \n  geom_smooth(aes(x = sulphates, \n                  y = volatile.acidity), \n              se = F, \n              method = 'lm', \n              col = 'firebrick1', \n              size = 1)+\n  plot.theme\n```\n</br>\nCorrelations seems relatively constant between different qualities\n</br>\n```{r, echo = F, message=FALSE, warning=F, cache = T}\nqualities <- unique(rw$quality)[order(unique(rw$quality))]\nfor (i in qualities) {\n  print(paste('Quality:', i, \n              '|', \n              'correlation: ', \n              round(cor(rw[rw$quality == i, 'sulphates'],\n                        rw[rw$quality == i, 'volatile.acidity']\n              ),6), sep = ''))\n}\n\n```\n</br>\nBarring quality 3, they tend to stay constant. \n</br>\n```{r alcohol vs density vs quality , echo = F, message=FALSE, warning=F}\nggplot(rw) + \n  geom_point(aes(x = alcohol, \n                 y = density), \n             col = 'dodgerblue1') + \n  facet_grid(.~quality) + \n  plot.theme + \n  geom_smooth(aes(x = alcohol, \n                  y = density), \n              se = F, \n              method = 'lm', \n              col = 'firebrick1', \n              size = 1)\n```\n</br>\nCorrelations seem to be quite constant. \n</br>\n```{r, echo = F, message=FALSE, warning=F}\nfor (i in qualities) {\n  print(paste('Quality:', i, \n              '|', \n              'correlation: ', \n              round(cor(rw[rw$quality == i, 'alcohol'],\n                        rw[rw$quality == i, 'density']\n              ),6), sep = ''))\n}\n```\n</br>\nIndeed it is higher. \n</br>\n```{r sulphates vs chlorides vs quality , echo = F, message=FALSE, warning=F}\nggplot(rw) + \n  geom_point(aes(x = sulphates, \n                 y = chlorides), \n             col = 'dodgerblue1') + \n  facet_grid(.~quality) + \n  plot.theme + \n  geom_smooth(aes(x = sulphates, \n                  y = chlorides), \n              se = F, \n              method = 'lm', \n              col = 'firebrick1', \n              size = 1)\n```\n</br>\nCorrelations seem to be quite constant. \n</br>\n```{r, echo = F, message=FALSE, warning=F}\nfor (i in qualities) {\n  print(paste('Quality:', i, \n              '|', \n              'correlation: ', \n              round(cor(rw[rw$quality == i, 'sulphates'],\n                        rw[rw$quality == i, 'chlorides']\n              ),6), sep = ''))\n}\n```\n</br>\nHeavy variation in the correlation between the different qualities. \n</br>\n```{r volatile.acidity vs citric.acid vs quality , echo = F, message=FALSE, warning=F}\nggplot(rw) + \n  geom_point(aes(x = volatile.acidity, \n                 y = citric.acid), \n             col = 'dodgerblue1') + \n  facet_grid(.~quality) + \n  plot.theme + \n  geom_smooth(aes(x = volatile.acidity, \n                  y = citric.acid), \n              se = F, \n              method = 'lm', \n              col = 'firebrick1', \n              size = 1) +\n  scale_y_continuous(limits = c(0, max(rw$citric.acid)*1.1))\n```\n</br>\n\n```{r, echo = F, message=FALSE, warning=F}\nfor (i in qualities) {\n  print(paste('Quality:', i, \n              '|', \n              'correlation: ', \n              round(cor(rw[rw$quality == i, 'volatile.acidity'],\n                        rw[rw$quality == i, 'citric.acid']\n              ),6), sep = ''))\n}\n```\n</br>\nCorrelations seem to be quite constant. \n</br>\n```{r, echo = F, message=FALSE, warning=F}\nggplot(rw) +\n  geom_point(aes(x = fixed.acidity, y = pH, col = citric.acid), size = 3, alpha = .5) +\n  scale_color_gradient(low = 'dodgerblue1', high = 'firebrick1') + plot.theme\n```\n</br>\nReally not a surprise to see the high correlation between pH, fixed acidity and citric acid levels.\n</br>\n```{r, echo = F, message=FALSE, warning=F}\nggplot(rw) +\n  geom_point(aes(x = density, y = fixed.acidity, col = alcohol), size = 3, alpha = .5) +\n  scale_color_gradient(low = 'dodgerblue1', high = 'firebrick1') + plot.theme\n```\n</br>\nStrong correlation between density and fixed acidity. A blue shift (lower alcohol) with higher density levels.\n</br>\n\n\n### <span style=\"color:DodgerBlue;\">Multivariate analysis</span>\n\n\n</br>\nIt looks like alcohol, sulphates and volatile acidity can be good predictors for quality. It's worthwhile to see if density, chlorides and citric acid improves the accuracy of the model. Linear models require a continuous response variable, so using quality as a factor is not possible. Instead, I'll use quality as a numeric value, and round the predicted value to the closest integer instead. I doubt it will be accurate, but it's worth a shot anyways.\n</br>\n\n```{r lm using alcohol + sulphates + volatile.acidity, echo = F, message=FALSE, warning=F}\nrw.lm <- lm(data = rw, quality ~  alcohol + sulphates + volatile.acidity)\npred.corr <- round(predict(rw.lm, rw),0) == rw$quality\ntable(pred.corr)\nsum(pred.corr) / length(pred.corr)\n```\n</br>\n58% of the wines were predicted accurately only using alcohol, sulphates and volatile acidity\n</br>\n\n```{r lm alcohol + sulphates + volatile.acidity  + chlorides + citric.acid + density, echo = F, message=FALSE, warning=F}\nrw.lm <- lm(data = rw, quality ~  alcohol + sulphates + volatile.acidity  + chlorides + citric.acid + density)\npred.corr <- round(predict(rw.lm, rw),0) == rw$quality\ntable(pred.corr)\nsum(pred.corr) / length(pred.corr)\n```\n</br>\nBy including chlorides, citric.acid and density, the accuracy only improved by 1% to 59%\n</br>\n```{r random forest, echo = F, message=FALSE, warning=F}\nlibrary(randomForest)\nrw.rf <- randomForest(data = rw, as.factor(quality) ~  alcohol + sulphates + volatile.acidity  + chlorides + citric.acid+ density)\npred.corr <- rw.rf$predicted == rw$quality\ntable(pred.corr)\nsum(pred.corr) / length(pred.corr)\n```\n</br>\nComparing this to a Random Forest model, it's quite shocking to see how far we are from a good model. Using a linear model was bit of a long shot, but I don't think it performed too poorly.\n</br>\n\n\n### <span style=\"color:DodgerBlue;\">Final Plots and Summary</span>\n#### Plot one\n\n```{r final plot1, echo = F, message=FALSE, warning=F}\nggplot(rw) + geom_boxplot(aes(x = as.factor(quality),\n                              y = alcohol), \n                          outlier.colour ='firebrick1',\n                          col = 'dodgerblue3', \n                          fill = 'dodgerblue1') + \n  ggtitle('Alcohol content wines of each quality rating\\n') +\n  xlab('Alcohol content') +\n  ylab('Quality') +\n  theme(\n    panel.background = element_rect(fill = \"white\", color = 'dodgerblue1'),\n    plot.background = element_rect(fill = \"white\"),\n    panel.grid.major = element_line(colour ='azure3'),\n    panel.grid.minor = element_blank(),\n    axis.ticks.y = element_blank(),\n    panel.border = element_blank(),\n    axis.text= element_text(size = 10),\n    axis.title = element_text(size = 15),\n    plot.title = element_text(size = 20)\n  )\n```\n\n\n#### Description one\nThere are two things I like about this plot. The first is to show that people tend to give wines with higher alcohol content a higher rating. There are obviously wines with a high alcohol content with lower ratings (4 and less), but there is a definite link between the rating and alcohol content. The second so to see how many outliers there are with wines with a quality rating of 5. I think this is due to the judges defaulting to an 'average' rating when they're not entirely sure where to place the wine. In a way it echos 'there is no such thing as a bad wine, all wines are average at the very least. Unless it's a bad wine'.  \n\n\n#### Plot two\n```{r final plot2, echo = F, message=FALSE, warning=F}\nggplot(rw) + \n  geom_point(aes(x = alcohol, \n                 y = density), \n             col = 'dodgerblue1',\n             size = 5,\n             alpha = .35) + \n  facet_grid(.~quality) + \n  geom_smooth(aes(x = alcohol, \n                  y = density), \n              se = F, \n              method = 'lm', \n              col = 'firebrick1', \n              size = 1,\n              alpha = .25) +\n  ggtitle('Alcohol vs. density over each quality rating\\n\\nQuality') +\n  xlab('Alcohol content') +\n  ylab('Density') +\n  theme(\n    panel.background = element_rect(fill = \"white\", color = 'dodgerblue1'),\n    plot.background = element_rect(fill = \"white\"),\n    panel.grid.major = element_line(colour ='azure3'),\n    panel.grid.minor = element_blank(),\n    axis.ticks.y = element_blank(),\n    panel.border = element_blank(),\n    axis.text= element_text(size = 10),\n    axis.title = element_text(size = 15),\n    plot.title = element_text(size = 20)\n  )\n```\n\n\n#### Description two\nIt's interesting to see the effect the alcohol content has on the density of wine. But considering that alcohol is around 20% less dense than water at room temperature, it shouldn't a big surprise (higher alcohol content means the wine is less dense).  \n\n\n#### Plot three\n\n```{r final plot3, echo = F, message=FALSE, warning=F}\nggplot(rw) +\n  geom_point(aes(x = fixed.acidity, \n                 y = pH, \n                 col = citric.acid), \n             size = 3, alpha = .5) +\n  scale_color_gradient(low = 'dodgerblue1', \n                       high = 'firebrick1', \n                       name = \"Citric acid\") +\n  ggtitle('pH by fixed acidity and citric acid levels') +\n  xlab('Fixed acidity') +\n  ylab('pH') +\n  theme(\n    panel.background = element_rect(fill = \"white\", \n                                    color = 'dodgerblue1'),\n    plot.background = element_rect(fill = \"white\"),\n    panel.grid.major = element_line(colour ='azure3'),\n    panel.grid.minor = element_blank(),\n    axis.ticks.y = element_blank(),\n    panel.border = element_blank(),\n    axis.text= element_text(size = 10),\n    axis.title = element_text(size = 15),\n    plot.title = element_text(size = 20)\n  ) \n```\n\n#### Description three\nCitric acid is only found in _minute_ quantities in wine grapes. More often citric acid gets added to wine after the fermentation process to remove excess copper and wine (according to [Wikipedia](https://en.wikipedia.org/wiki/Acids_in_wine#Citric_acid)). This graphs illustrates the link between pH and the acid levels very well. Stronger acids have lower pH values, and you can see here that adding citric acid to wine lowers the pH values.\n\n### <span style=\"color:DodgerBlue;\">Conclusion</span> \nRating the quality of wine can be quite a subjective process - everyone has his own preference. But having said that, there are definitely a few factors that can affect the taste of wine. The alcohol-, volatile acidity and sulphate- levels are the main culprits. And these features in turn get influenced by factors like the amount of citric acid added after fermentation, the chloride levels and the method of preservation (how much sulphate gets added if any). Fitting a linear model using these factors, accurately predicts 58% of the wines - which isn't terrible bad. But using a linear model is not the best option, since the response variable is categorical. Perhaps it would be better to use a Naive Bayes model or build a decision tree instead. The Random Forest model provides the best 'out of the box' model, but it's possible to improve on that. It would be interesting to see the cultivars of the wine. I think single origin wines or simple blends would have much higher levels of alcohol, since more complex blends can be fine-tuned to have more specific sulphate and alcohol levels. And obviously every type of grape has a different fermentation process which would different results. \n\n\n",
    "created" : 1452766518953.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3693874347",
    "id" : "C0E245F8",
    "lastKnownWriteTime" : 1452766841,
    "path" : "C:/Users/anmarais.METMOM/Desktop/GitHub/P4_Project/RWmd.Rmd",
    "project_path" : "RWmd.Rmd",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_markdown"
}